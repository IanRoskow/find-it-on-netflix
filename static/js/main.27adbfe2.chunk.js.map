{"version":3,"sources":["assets/images/Arrow.svg","components/Search/Search.js","api/Netflix.js","components/CarouselSlide/CarouselSlide.js","components/CarouselContainer/Carousel/Carousel.js","components/MovieDetailsContainer/MovieDetails/MovieDetails.js","components/CarouselContainer/CarouselContainer.js","utils/utils.js","components/App/App.js","index.js"],"names":["module","exports","gridStyles","display","gridTemplateColumns","gridTemplateRows","gridGap","maxWidth","margin","SearchBar","state","term","genre","onFormSubmit","event","preventDefault","props","onSubmit","Form","this","style","Input","inverted","type","placeholder","value","onChange","e","setState","target","Dropdown","fluid","selection","options","genres","lazyLoad","clearable","search","d","Button","PureComponent","axios","create","headers","process","baseURL","enterHover","li","closest","slider","document","querySelector","classList","add","contains","leaveHover","remove","CustomCardSlide","index","image","classToAdd","callBack","className","onMouseEnter","onMouseLeave","onClick","removeAttribute","setAttribute","padding","components","querySelectorAll","width","clientWidth","window","getComputedStyle","locationH","WebKitCSSMatrix","webkitTransform","m41","forEach","el","offsetLeft","src","getAttribute","Carousel","movieList","selectMovie","isLoadingMovies","count","slides","map","movie","largeimage","length","imageAttribute","visibleSlides","variableAttribute","first","last","key","hasMasterSpinner","alt","netflixid","i","push","Placeholder","height","Image","console","log","needExtra","extraSlides","data-src","buttons","Fragment","children","require","naturalSlideWidth","naturalSlideHeight","totalSlides","step","infinite","MovieMeta","float","color","icon","data","flagContainer","position","bottom","boxSizing","flagStyles","alignItems","gridAutoColumns","gridAutoFlow","overflowX","overflowY","MovieDetails","details","Item","Group","backgroundColor","transitionDuration","Object","entries","movieDetails","Sidebar","Icon","fitted","name","imdbinfo","rating","runtime","nfinfo","released","awards","flags","country","flag","Flag","ccode","title","minHeight","image1","Content","transition","Header","fontSize","he","decode","top","right","size","link","closeMovie","Meta","overflow","marginTop","Description","synopsis","marginBottom","as","Divider","Transition","visible","isLoading","animation","duration","Dimmer","active","Loader","CarouselContainer","isLoadingMovie","getMovie","ID","a","Netflix","get","params","t","q","response","RESULT","carousel","getNetflix","searchTerm","currentYear","Date","getFullYear","sort","cl","st","ob","p","sa","ITEMS","getGenres","App","dropDown","getMovies","reduce","result","keys","text","join","Container","textAlign","Search","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.27adbfe2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Arrow.6a87d030.svg\";","import React, { PureComponent } from 'react';\nimport { Form, Dropdown, Button } from 'semantic-ui-react';\n\nconst gridStyles = {\n  display: 'grid',\n  gridTemplateColumns: '5fr 5fr 2fr',\n  gridTemplateRows: '38px',\n  gridGap: '15px',\n  maxWidth: '800px',\n  margin: 'auto'\n};\n\nclass SearchBar extends PureComponent {\n  state = { term: '', genre: '' };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(this.state.term, this.state.genre);\n  };\n\n  render() {\n    //TODO for each in the drop down state we will create a custom row of movies with a header.\n    return (\n      <Form onSubmit={this.onFormSubmit}>\n        <div style={gridStyles}>\n          <Form.Input\n            inverted\n            type='text'\n            placeholder='Movie, Show, or Actor/Actress '\n            value={this.state.term}\n            onChange={e => this.setState({ term: e.target.value, genre: '' })}\n          />\n          <Dropdown\n            placeholder='Crazy Sub-Genres'\n            fluid\n            selection\n            options={this.props.genres}\n            lazyLoad\n            clearable\n            search\n            value={this.state.genre}\n            onChange={(e, d) => {\n              this.setState({ term: '', genre: d.value });\n            }}\n          />\n          <Button type='submit'>Search</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import axios from 'axios';\n\nexport default axios.create({\n  headers: {\n    'content-type': 'application/octet-stream',\n    'x-rapidapi-host': 'unogs-unogs-v1.p.rapidapi.com',\n    'x-rapidapi-key': process.env.REACT_APP_API_KEY\n  },\n  baseURL: 'https://unogs-unogs-v1.p.rapidapi.com/aaapi.cgi'\n});\n","import PropTypes from 'prop-types';\nimport { Slide } from 'pure-react-carousel';\nimport React from 'react';\n\nimport './CarouselSlide.css';\n\nconst enterHover = e => {\n  e.preventDefault();\n  let li = e.target.closest('li');\n  let slider = document.querySelector('.carousel__slider');\n  li.classList.add('is-open');\n  if (li.classList.contains('last-slide')) slider.classList.add('last__slide');\n\n  slider.classList.add('open-now');\n};\n\nconst leaveHover = e => {\n  e.preventDefault();\n  let slider = document.querySelector('.carousel__slider');\n  e.target.closest('li').classList.remove('is-open');\n  slider.classList.remove('open-now');\n  slider.classList.remove('last__slide');\n};\n\nconst CustomCardSlide = ({ index, image, classToAdd, callBack }) => (\n  <Slide index={index} className={classToAdd}>\n    <div\n      className='slide'\n      onMouseEnter={enterHover}\n      onMouseLeave={leaveHover}\n      onClick={event => {\n        if (document.querySelector('li[selected]')) {\n          document.querySelector('li[selected]').removeAttribute('selected');\n        }\n        event.target.closest('li').setAttribute('selected', 'true');\n        callBack();\n      }}\n      style={{ padding: '2px' }}\n    >\n      {image}\n    </div>\n  </Slide>\n);\n\nCustomCardSlide.propTypes = {\n  index: PropTypes.number.isRequired\n};\n\nexport default CustomCardSlide;\n","import React from 'react';\nimport {\n  CarouselProvider,\n  Slider,\n  ButtonBack,\n  ButtonNext\n} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { Placeholder } from 'semantic-ui-react';\nimport CarouselSlide from '../../CarouselSlide/CarouselSlide';\n\nimport './Carousel.css';\n\nconst lazyLoad = () => {\n  // if(document.querySelector('.details-open')) this.closeMovie();\n  let slider = document.querySelector('.carousel__slider-tray-wrapper');\n  let components = document.querySelectorAll(\n    '.carousel__slider-tray-wrapper li'\n  );\n  let width = slider.clientWidth;\n  let style = window.getComputedStyle(slider.querySelector('ul'));\n  // eslint-disable-next-line no-undef\n  let matrix = new WebKitCSSMatrix(style.webkitTransform);\n  let locationH = matrix.m41 * -1;\n  components.forEach(el => {\n    if (el.offsetLeft < locationH + width * 4) {\n      let image = el.querySelector('img');\n      if (!image.src) {\n        image.src = image.getAttribute('data-src');\n      }\n    }\n  });\n};\n\nconst Carousel = ({ movieList, selectMovie, isLoadingMovies }) => {\n  //Set the mount of visible slides, this will change as the viewport changes.\n  let visibleSlides = 7;\n\n  //Map the movie titles to an array of card slides\n  let count = 0;\n  const slides = movieList.map(movie => {\n    count++;\n    let image = movie.largeimage.length ? movie.largeimage : movie.image;\n    let imageAttribute = count < visibleSlides * 3 ? 'src' : 'data-src';\n    let variableAttribute = { [imageAttribute]: image };\n    //may need to refactor for mobile, when slide count is one\n    let first = count % visibleSlides === 1 ? 'first-slide' : '';\n    let last = count % visibleSlides === 0 ? 'last-slide' : '';\n    return (\n      <CarouselSlide\n        key={count}\n        image={\n          <img\n            {...variableAttribute}\n            hasMasterSpinner='true'\n            className='ui small'\n            width='150px'\n            alt='Error'\n          />\n        }\n        index={count}\n        classToAdd={first + last}\n        callBack={() => selectMovie(movie.netflixid)}\n      />\n    );\n  });\n\n  if (isLoadingMovies) {\n    for (let i = 1; i <= visibleSlides; i++) {\n      count++;\n      slides.push(\n        <CarouselSlide\n          key={count}\n          image={\n            <Placeholder inverted style={{ height: 200, width: 150 }}>\n              <Placeholder.Image />\n            </Placeholder>\n          }\n          index={count}\n          classToAdd={''}\n          callBack={() => {}}\n        />\n      );\n    }\n  }\n\n  //Add extra blank slides to ensure it first and last slides in the carousel stay consistent\n  console.log(count);\n  let needExtra = count % visibleSlides;\n  let extraSlides = needExtra ? visibleSlides - needExtra : 0;\n  console.log(extraSlides);\n  for (let i = 1; i <= extraSlides; i++) {\n    count++;\n    slides.push(\n      <CarouselSlide\n        key={count}\n        image={<img data-src='' className='ui small' width='150px' alt='' />}\n        index={count}\n        classToAdd={''}\n        callBack={() => {}}\n      />\n    );\n  }\n\n  // //Create the dot navigation for the carousel\n  // let dotCount = Math.round(count / visibleSlides);\n  // let dotNavigation = (\n  //   <CustomDotGroup\n  //     slides={dotCount}\n  //     count={visibleSlides}\n  //     callBack={lazyLoad}\n  //   />\n  // );\n\n  //Create the left and right buttons for the carousel\n  let buttons =\n    count === 0 ? null : (\n      <React.Fragment>\n        <ButtonBack\n          children={\n            <img src={require('../../../assets/images/Arrow.svg')} alt='<' />\n          }\n        />\n        <ButtonNext\n          onClick={lazyLoad}\n          children={\n            <img src={require('../../../assets/images/Arrow.svg')} alt='>' />\n          }\n        />\n      </React.Fragment>\n    );\n\n  //Conditional render of the movie details depending on if the title was selected.\n  // let movieDetails = null;\n  // if (this.state.movie === 'loading') {\n  //   movieDetails = <MovieDetails movie='Loading' />;\n  // } else if (this.state.movie) {\n  //   movieDetails = (\n  //     <MovieDetails movie={this.state.movie} callBack={this.closeMovie} />\n  //   );\n  // }\n  // let isActive = this.state.loading ? 'active' : '';\n  //Return the results carousel with the movie titles\n  return (\n    <React.Fragment>\n      <CarouselProvider\n        naturalSlideWidth={1}\n        naturalSlideHeight={1.75}\n        totalSlides={count}\n        visibleSlides={visibleSlides}\n        step={visibleSlides}\n        style={{ width: '100%' }}\n        className='details-closed'\n        infinite='true'\n      >\n        {buttons}\n        <Slider>{slides}</Slider>\n        {/* The buttons need to be disabled until I can think of a fix for the lazy load */}\n        {/* {dotNavigation} */}\n        {/* <div\n          className='transitionMovie'\n          style={{ position: 'relative', top: '-50px' }}\n        >\n          <Transition\n            visible={this.state.loading}\n            animation='fade'\n            duration={250}\n          >\n            <Dimmer\n              active={isActive}\n              style={{ backgroundColor: 'rgb(20, 20, 20)' }}\n            >\n              <Loader size='big'>Loading</Loader>\n            </Dimmer>\n          </Transition>\n          {movieDetails}\n        </div> */}\n      </CarouselProvider>\n    </React.Fragment>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport he from 'he';\nimport {\n  Transition,\n  Dimmer,\n  Loader,\n  Header,\n  Divider,\n  Icon,\n  Item,\n  Flag\n} from 'semantic-ui-react';\n\nimport './MovieDetails.css';\n\nconst MovieMeta = props => {\n  return (\n    <span\n      style={{\n        padding: '10px 40px 0px 0px',\n        float: 'left',\n        color: '#828282',\n        height: '35px'\n      }}\n    >\n      {props.icon}\n      {`  ${props.data}`}\n    </span>\n  );\n};\n\nconst flagContainer = {\n  position: 'absolute',\n  width: '100%',\n  bottom: '0px',\n  color: 'white',\n  boxSizing: 'content-box'\n};\n\nconst flagStyles = {\n  alignItems: 'end',\n  display: 'grid',\n  gridTemplateColumns: 'repeat(7, 140px)',\n  gridTemplateRows: 'repeat(2, 25px)',\n  gridAutoColumns: '140px',\n  gridAutoFlow: 'column',\n  overflowX: 'scroll',\n  overflowY: 'hidden',\n  height: '70px'\n};\n\nconst MovieDetails = props => {\n  let details = (\n    <Item.Group\n      style={{\n        height: '245px',\n        backgroundColor: '#131313',\n        transitionDuration: '500ms'\n      }}\n    >\n      <Item></Item>\n    </Item.Group>\n  );\n  if (Object.entries(props.movieDetails).length) {\n    let Sidebar = (\n      <div>\n        <MovieMeta\n          icon={<Icon inverted fitted color='yellow' name='imdb' />}\n          data={props.movieDetails.imdbinfo.rating}\n        />\n        <MovieMeta\n          icon={<Icon inverted fitted color='black' name='time' />}\n          data={props.movieDetails.imdbinfo.runtime}\n        />\n        <MovieMeta icon='' data={props.movieDetails.nfinfo.released} />\n        <MovieMeta icon='' data={props.movieDetails.imdbinfo.genre} />\n        <MovieMeta\n          icon={<Icon inverted fitted color='blue' name='trophy' />}\n          data={props.movieDetails.imdbinfo.awards}\n        />\n      </div>\n    );\n\n    let flags = props.movieDetails.country.map(flag => {\n      return <Flag name={flag.ccode} title={flag.country} />;\n    });\n\n    details = (\n      <React.Fragment>\n        <Item.Group\n          style={{\n            position: 'relative',\n            'background-color': 'rgb(20,20,20)'\n          }}\n        >\n          <Item>\n            <Item.Image\n              style={{ width: '200px', minHeight: '280px' }}\n              src={props.movieDetails.nfinfo.image1}\n            />\n            <Item.Content\n              style={{\n                position: 'relative',\n                padding: '20px 0px',\n                margin: '0px 20px',\n                transition: 'opacity 250ms'\n              }}\n            >\n              <Item.Header style={{ color: 'white', fontSize: '1.6em' }}>\n                {he.decode(props.movieDetails.nfinfo.title)}\n              </Item.Header>\n              <Icon\n                style={{ position: 'absolute', top: '15px', right: '15px' }}\n                inverted\n                color='grey'\n                name='x'\n                size='large'\n                link\n                onClick={props.closeMovie}\n              />\n              <Item.Meta style={{ overflow: 'hidden', marginTop: '0px' }}>\n                {Sidebar}\n              </Item.Meta>\n              <Item.Description\n                style={{\n                  color: '#828282',\n                  fontSize: '1.2em',\n                  marginTop: '15px'\n                }}\n              >\n                {he.decode(props.movieDetails.nfinfo.synopsis)}\n              </Item.Description>\n              <div style={flagContainer}>\n                <Header\n                  style={{ marginBottom: '0px' }}\n                  as='h5'\n                  inverted\n                  color='green'\n                >\n                  Streaming in:\n                </Header>\n                <div style={flagStyles}>{flags}</div>\n              </div>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n        <Divider />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div\n      className='transitionMovie'\n      style={{ position: 'relative', top: '-50px' }}\n    >\n      <Transition visible={props.isLoading} animation='fade' duration={250}>\n        <Dimmer\n          active={props.isLoading}\n          style={{ backgroundColor: 'rgb(20, 20, 20)' }}\n        >\n          <Loader size='big'>Loading</Loader>\n        </Dimmer>\n      </Transition>\n      {details}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { PureComponent } from 'react';\nimport Netflix from '../../api/Netflix';\nimport Carousel from './Carousel/Carousel';\nimport MovieDetails from '../MovieDetailsContainer/MovieDetails/MovieDetails';\n\nexport default class CarouselContainer extends PureComponent {\n  state = { movieDetails: {}, isLoadingMovie: false };\n\n  closeMovie = () => {\n    let slider = document.querySelector('.carousel');\n    document.querySelector('li[selected]').removeAttribute('selected');\n    slider.classList.add('details-closed');\n    slider.classList.remove('details-open');\n    this.setState({ movieDetails: {} });\n  };\n\n  getMovie = async ID => {\n    this.setState({ movieDetails: {}, isLoadingMovie: true });\n    let slider = document.querySelector('.carousel');\n    slider.classList.add('details-open');\n    slider.classList.remove('details-closed');\n    const response = await Netflix.get('', {\n      params: {\n        t: 'loadvideo',\n        q: ID\n      }\n    });\n    this.setState({\n      movieDetails: response.data.RESULT,\n      isLoadingMovie: false\n    });\n  };\n\n  render() {\n    //Need to create loading carousel component\n    let carousel =\n      this.props.movieList.length || this.props.isLoading ? (\n        <Carousel\n          movieList={this.props.movieList}\n          selectMovie={ID => this.getMovie(ID)}\n          isLoadingMovies={this.props.isLoading}\n        />\n      ) : null; //todo <LoadingCarousel/> instead of null\n\n    console.log(this.state.movieDetails.length);\n    console.log(this.props.movieList.length);\n    let movieDetails =\n      Object.entries(this.state.movieDetails).length ||\n      this.state.isLoadingMovie ? (\n        <MovieDetails\n          movieDetails={this.state.movieDetails}\n          closeMovie={this.closeMovie}\n          isLoading={this.state.isLoadingMovie}\n        />\n      ) : null;\n    return (\n      <React.Fragment>\n        {carousel}\n        {movieDetails}\n      </React.Fragment>\n    );\n  }\n}\n","import Netflix from '../api/Netflix';\n\nexport const getNetflix = async (searchTerm, genre) => {\n  console.log(searchTerm);\n  console.log(genre);\n  const currentYear = new Date().getFullYear();\n  let sort = 'Rating';\n  if (!genre.length) {\n    genre = '0';\n    sort = 'Relevance';\n  }\n\n  const response = await Netflix.get('', {\n    params: {\n      q: `${searchTerm}-!1900,${currentYear}-!0,5-!0,10-!${genre}-!Any-!Any-!Any-!gt0-!{downloadable}`,\n      t: 'ns',\n      cl: 'all',\n      st: 'adv',\n      ob: sort,\n      p: '1',\n      sa: 'or'\n    }\n  });\n  console.log(response.data.ITEMS);\n  return response.data.ITEMS;\n};\n\nexport const getGenres = async () => {\n  const response = await Netflix.get('', {\n    params: {\n      t: 'genres'\n    }\n  });\n\n  return response.data.ITEMS;\n};\n","import React from 'react';\nimport SearchBar from '../Search/Search';\nimport CarouselContainer from '../CarouselContainer/CarouselContainer';\nimport { Container, Header } from 'semantic-ui-react';\nimport he from 'he';\nimport { getGenres, getNetflix } from '../../utils/utils';\n\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    dropDown: [],\n    movieList: [],\n    isLoading: false\n  };\n\n  getMovies = async (searchTerm, genre) => {\n    console.log(searchTerm);\n    console.log(genre);\n    await this.setState({ movieList: [], isLoading: false });\n    this.setState({ isLoading: true });\n    let data = await getNetflix(searchTerm, genre);\n    console.log(data);\n    this.setState({ movieList: data, isLoading: false });\n  };\n\n  async componentDidMount() {\n    let data = await getGenres();\n\n    const genres = data.reduce((result, genre) => {\n      let key = `${Object.keys(genre)}`;\n      let text = he.decode(key);\n      let value = genre[key].join(';');\n      if (genre[key].length === 1) {\n        result.push({ key, value, text });\n      }\n      return result;\n    }, []);\n\n    this.setState({ dropDown: genres });\n  }\n\n  render() {\n    let carousel =\n      this.state.movieList.length || this.state.isLoading ? (\n        <CarouselContainer\n          movieList={this.state.movieList}\n          isLoading={this.state.isLoading}\n        />\n      ) : null;\n    return (\n      <Container>\n        <Header as='h1' color='red' textAlign='center' style={{ margin: 60 }}>\n          Where is it streaming?\n        </Header>\n        <SearchBar\n          genres={this.state.dropDown}\n          onSubmit={(searchTerm, genre) => {\n            this.getMovies(searchTerm, genre);\n          }}\n        />\n        {carousel}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui/dist/semantic.min.css';\n\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}